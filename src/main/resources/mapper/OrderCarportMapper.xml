<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.parkingmanagement.dao.OrderCarportDao">
	<resultMap id="BaseResultMap" type="com.parkingmanagement.entity.OrderCarport" >
		<id column="orderCarport_id" property="orderCarportId" />
		<result column="orderCarport_user_id" property="orderCarportUserId"  />
		<result column="orderCarport_carport_id" property="orderCarportCarportId"  />
		<result column="orderCarport_time" property="orderCarportTime"  />
		<result column="orderCarport_status" property="orderCarportStatus"  />
	</resultMap>

	<resultMap id="VOMap" type="com.parkingmanagement.entity.vo.OrderVO" >
		<id column="orderCarportId" property="orderCarportId" />
		<result column="username" property="username"  />
		<result column="plateCode" property="plateCode"  />
		<result column="parkingName" property="parkingName"  />
		<result column="carportNum" property="carportNum"  />
		<result column="orderTime" property="orderCarportTime"  />
		<result column="orderStatus" property="orderCarportStatus"  />
	</resultMap>

	<sql id="base_select">
		orderCarport_id,orderCarport_carport_id,orderCarport_carport_id,orderCarport_time,orderCarport_status
	</sql>

	<select id="selectOrdering" resultMap="BaseResultMap" parameterType="Integer">
		select 	<include refid="base_select"/>
		FROM orderCarport
		where orderCarport_user_id = #{orderCarportUserId}
		and orderCarport_status = 0
	</select>


	<select id="breakOrder" parameterType="Integer" resultType="Integer">
		SELECT count(1)
		FROM ordercarport
		WHERE TIMESTAMPDIFF(MONTH,now(),FROM_UNIXTIME((orderCarport_time/1000), '%Y-%m-%d %H:%i:%s')) = 0
		and orderCarport_status = 2
		and orderCarport_user_id = #{orderCarportUserId}
	</select>

	<insert id="save" parameterType="com.parkingmanagement.entity.OrderCarport"  useGeneratedKeys="true" keyProperty = "orderCarport_id">
		insert into orderCarport(orderCarport_user_id,orderCarport_carport_id,orderCarport_time,orderCarport_status,orderCarport_plate_id)
		values (#{orderCarportUserId},#{orderCarportCarportId},#{orderCarportTime},#{orderCarportStatus},#{orderPlateId})
	</insert>

	<select id="findByTime" parameterType="Long" resultMap="BaseResultMap">
		select 	<include refid="base_select"/>
		FROM orderCarport
		where  orderCarport_time = #{orderCarportTime}
	</select>

	<update id="update" parameterType="com.parkingmanagement.entity.OrderCarport" >
		update orderCarport set
	  	<trim suffixOverrides=",">
			<if test="orderCarportUserId != null and orderCarportUserId != ''">
				orderCarport_user_id = #{orderCarportUserId},
			</if>
			<if test="orderCarportCarportId != null and orderCarportCarportId != ''">
				orderCarport_carport_id = #{orderCarportCarportId},
			</if>
			<if test="orderCarportTime != null and orderCarportTime != ''">
				orderCarport_time = #{orderCarportTime},
			</if>
			<if test="orderCarportStatus != null">
				orderCarport_status = #{orderCarportStatus},
			</if>
		</trim>
		where orderCarport_id = #{orderCarportId}
	</update>

	<select id="getVOList" resultMap="VOMap" parameterType="Integer">
		select u.username username, pl.plate_code plateCode , c.carport_num carportNum ,p.parking_name parkingName
		, o.orderCarport_time orderTime , o.orderCarport_status orderStatus, o.orderCarport_id orderCarportId
		from ordercarport o  ,user u   , plate pl   ,carport c , parking p
		where o.orderCarport_user_id = u.user_id and o.orderCarport_plate_id = pl.plate_id and u.user_id = pl.user_id and o.orderCarport_carport_id  = c.carport_id
		and c.parking_id = p.parking_id
		<if test="userId != null and userId != ''">
			and  u.user_id = #{userId}
		</if>
	</select>

</mapper>
 

